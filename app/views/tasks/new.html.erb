<div Align="center">
  <div class="container">
  <div class="wrapper col-md-8 col-md-offset-2 col-sm-10">
  <p class="flash"><%= notice %><%= alert %></p>

  <% if @task.errors.any? %>
      <div id="error_explanation">
        <p1><%= @task.errors.count %>件のエラーがあります。</p1>

        <ul>
        <% @task.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
      </div>
    <% end %>
  </div>

<script type="text/javascript">
$(function(){

    var time = 0;
    var mid = 0;
    var now;

    var min_time = 0;
    var sec_time = 0;

    var count;

    var min = $("#min");
    var sec = $("#sec");

    var start = $("#start");
    var stop = $("#stop");
    var reset = $("#reset");

    //startボタンが押された時の処理
    start.click(function(){
        now = new Date(); //現在時刻
        count = setInterval(counter, 10);
        toggle();
        reset.css("color", "#FF9194");
    });

    //stopボタンが押された時の処理
    stop.click(function(){
        mid += (new Date() - now)/1000;
        clearInterval(count);
        toggle();
        $("input#min").val($("#min").text())
        $("input#sec").val($("#sec").text())

        reset.css("color", "red");
    });

    //resetボタンが押された時の処理
    reset.click(function(){
        mid = 0;
        min.html("0");
        sec.html("00.00");
        reset.css("color", "gray");
        reset.prop("disabled", true);
    });

    //時間の計算
    function counter(){

        time = mid + ((new Date() - now)/1000);

        //60秒経過した時の処理
        if(time > 60){
            mid = 0;
            min_time ++;
            now = new Date();
            time = 0;
            sec.html();
        }

        //秒数が10秒より小さかったら01, 02のようにする
        if(time < 10){
            sec.html("0"+time.toFixed(2));
        }else{
            sec.html(time.toFixed(2));
        }
        min.html(min_time);

    }

    //ボタンの切り替え
    function toggle(){
        if(!start.prop("disabled")){
            start.prop("disabled", true);
            stop.prop("disabled", false);
            reset.prop("disabled", true);
        }else{
            start.prop("disabled", false);
            stop.prop("disabled", true);
            reset.prop("disabled", false);
        }
    }
});

</script>

<body>
 <div id="content">
   <div id="timer">
     <h2 id="name">Tasktimer</h2>
     <p id="text">
       <span id="min">0</span>min
       <span id="sec">00.00</span>sec
     </p>
     <input type="button" id="start" value="Start">
     <input type="button" id="stop" value="Stop" disabled>
     <input type="button" id="reset" value="Reset" disabled>
   </div>
 </div>

 <div id="colum">
 <%= form_for(@task) do |f| %>
    <%= f.label :タスク名 %>
    <%= f.text_field :title, value: params[:task_name] %>

    <%= f.label :タグ %>
    <%= f.select :tag, [["プログラミング", "プログラミング"], ["お仕事", "お仕事"], ["遊び", "遊び"], ["家事", "家事"], ["その他", "その他"], ["Groove", "Groove"], ["石野卓球", "石野卓球"]] ,class:"form-control", selected: params[:task_tag] %>
　 <br>
    <%= f.label :ノート %>
    <%= f.text_area :content, value: params[:task_content], :size=>"60x10" %>
  <br>
  <%= f.submit '保存する' %>
  <%= hidden_field_tag :min %>
  <%= hidden_field_tag :sec %>
  </div>

</body>
<% end %>
</div>
</div>
